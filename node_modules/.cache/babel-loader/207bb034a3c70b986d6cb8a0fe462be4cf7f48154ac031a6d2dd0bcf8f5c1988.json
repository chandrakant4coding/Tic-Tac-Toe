{"ast":null,"code":"var _jsxFileName = \"/project/workspace/src/components/GameBoard.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialGameBoard = [[null, null, null], [null, null, null], [null, null, null]];\nexport default function GameBoard({\n  onSelectSquare,\n  turns\n}) {\n  let gameBoard = initialGameBoard;\n  for (const turn of turns) {\n    const {\n      square,\n      player\n    } = turn;\n    const {\n      row,\n      col\n    } = square;\n    gameBoard[row][col] = player;\n  }\n  // const [gameBoard, setGameBoard] = useState(initialGameBoard);\n  // const handleSelectSquare = (rowIndex, colIndex) => {\n  //   setGameBoard((prevGameBoard) => {\n  //     const updatedBoard = [\n  //       ...prevGameBoard.map((innerArray) => [...innerArray]),\n  //     ];\n  //     console.log(\"updatedBoard\", updatedBoard);\n  //     updatedBoard[rowIndex][colIndex] = activeBoardSymbol;\n\n  //     return updatedBoard;\n  //   });\n  //   onSelectSquare();\n  // };\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    id: \"game-board\",\n    children: gameBoard.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: row.map((playerSymbol, colIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onSelectSquare(rowIndex, colIndex),\n            disabled: playerSymbol !== null,\n            children: playerSymbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["initialGameBoard","GameBoard","onSelectSquare","turns","gameBoard","turn","square","player","row","col","_jsxDEV","id","children","map","rowIndex","playerSymbol","colIndex","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/project/workspace/src/components/GameBoard.jsx"],"sourcesContent":["const initialGameBoard = [\r\n  [null, null, null],\r\n  [null, null, null],\r\n  [null, null, null],\r\n];\r\n\r\nexport default function GameBoard({ onSelectSquare, turns }) {\r\n  let gameBoard = initialGameBoard;\r\n\r\n  for (const turn of turns) {\r\n    const { square, player } = turn;\r\n    const { row, col } = square;\r\n\r\n    gameBoard[row][col] = player;\r\n  }\r\n  // const [gameBoard, setGameBoard] = useState(initialGameBoard);\r\n  // const handleSelectSquare = (rowIndex, colIndex) => {\r\n  //   setGameBoard((prevGameBoard) => {\r\n  //     const updatedBoard = [\r\n  //       ...prevGameBoard.map((innerArray) => [...innerArray]),\r\n  //     ];\r\n  //     console.log(\"updatedBoard\", updatedBoard);\r\n  //     updatedBoard[rowIndex][colIndex] = activeBoardSymbol;\r\n\r\n  //     return updatedBoard;\r\n  //   });\r\n  //   onSelectSquare();\r\n  // };\r\n  return (\r\n    <ol id=\"game-board\">\r\n      {gameBoard.map((row, rowIndex) => (\r\n        <li key={rowIndex}>\r\n          <ol>\r\n            {row.map((playerSymbol, colIndex) => (\r\n              <li key={colIndex}>\r\n                <button\r\n                  onClick={() => onSelectSquare(rowIndex, colIndex)}\r\n                  disabled={playerSymbol !== null}\r\n                >\r\n                  {playerSymbol}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,MAAMA,gBAAgB,GAAG,CACvB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAClB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CACnB;AAED,eAAe,SAASC,SAASA,CAAC;EAAEC,cAAc;EAAEC;AAAM,CAAC,EAAE;EAC3D,IAAIC,SAAS,GAAGJ,gBAAgB;EAEhC,KAAK,MAAMK,IAAI,IAAIF,KAAK,EAAE;IACxB,MAAM;MAAEG,MAAM;MAAEC;IAAO,CAAC,GAAGF,IAAI;IAC/B,MAAM;MAAEG,GAAG;MAAEC;IAAI,CAAC,GAAGH,MAAM;IAE3BF,SAAS,CAACI,GAAG,CAAC,CAACC,GAAG,CAAC,GAAGF,MAAM;EAC9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA,oBACEG,OAAA;IAAIC,EAAE,EAAC,YAAY;IAAAC,QAAA,EAChBR,SAAS,CAACS,GAAG,CAAC,CAACL,GAAG,EAAEM,QAAQ,kBAC3BJ,OAAA;MAAAE,QAAA,eACEF,OAAA;QAAAE,QAAA,EACGJ,GAAG,CAACK,GAAG,CAAC,CAACE,YAAY,EAAEC,QAAQ,kBAC9BN,OAAA;UAAAE,QAAA,eACEF,OAAA;YACEO,OAAO,EAAEA,CAAA,KAAMf,cAAc,CAACY,QAAQ,EAAEE,QAAQ,CAAE;YAClDE,QAAQ,EAAEH,YAAY,KAAK,IAAK;YAAAH,QAAA,EAE/BG;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC,GANFN,QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOb,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC,GAZER,QAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAab,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACC,EAAA,GA1CuBtB,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}